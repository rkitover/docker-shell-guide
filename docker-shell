#!/bin/sh

VERSION=0.2

main() {
    find_docker

    while [ $# -gt 0 ]; do
        case "$1" in
            --version)
                echo "${0##*/} $VERSION"
                exit 0
                ;;
            --name)
                shift
                name=$1
                shift
                ;;
            --name=*)
                name=${1##--name=}
                shift
                ;;
            -*)
                shift
                ;;
            *)
                image=$1
                shift
                break
                ;;
        esac
    done

    : ${name:=$(echo "$image" | sed 's,[/:],_,g')}

    # Default to starting a shell, otherwise run command.
    if [ $# -eq 0 ]; then
        set -- "${SHELL:-/bin/bash}" -l
    fi

    : ${XDG_RUNTIME_DIR:=/run/user/$(id -u)}

    target=$USER/"$image"

    if container_exists $name; then
        target=$name
    fi

    set -- \
        -e SHELL="${SHELL:-/bin/bash}" \
        -e LANG="${LANG:-C}" \
        -e DISPLAY="$DISPLAY" \
        -e XDG_RUNTIME_DIR="$XDG_RUNTIME_DIR" \
        -w "$HOME" \
        --detach-keys="ctrl-@" \
        -it -u $USER \
        $extra_args \
        $target \
        "$@"

    # If running, exec another shell in the container.
    if container_exists $name; then
        exec $docker exec "$@"
    fi

    # Otherwise launch a new container.
    $docker run --name "$name" -h "$name" \
        -v /tmp/.X11-unix:/tmp/.X11-unix \
        -v "$XDG_RUNTIME_DIR":"$XDG_RUNTIME_DIR" \
        --device=/dev/dri \
        -v "$HOME":"$HOME" \
        $run_extra_args \
        "$@"

    if container_exists $name -f "status=exited"; then
        $docker commit "$name" $USER/"$image"

        $docker rm "$name"
    fi
}

container_exists() {
    _name=$1
    shift
    [ -n "$($docker ps -q -a -f "name=$_name" "$@" 2>/dev/null)" ]
}

find_docker() {
    extra_args=
    run_extra_args=

    if [ -z "$DOCKER" ] && command -v podman >/dev/null; then
        docker=podman
    else
        docker=${DOCKER:-docker}
    fi

    case "$($docker --version)" in
        *podman*)
            # Thanks to stevenwhately for this solution, from:
            # https://github.com/containers/libpod/issues/2898#issuecomment-485291659
            user_id_real=$(id -u)
            max_uid_count=65536
            max_minus_uid=$((max_uid_count - user_id_real))
            uid_plus_one=$((user_id_real + 1))

            extra_args="--privileged"

            if [ $user_id_real -lt 65536 ]; then
                run_extra_args="--uidmap $user_id_real:0:1 --uidmap 0:1:$user_id_real --uidmap $uid_plus_one:$uid_plus_one:$max_minus_uid"
            else
                run_extra_args="--uidmap $user_id_real:0:1 --uidmap 0:1:65536"
            fi
            ;;
    esac
}

main "$@"
